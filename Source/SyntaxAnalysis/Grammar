unit           -> block | if | while | line | function_definiton

block          -> "{" unit* "}"
line           -> (assignment | expression)

if             -> "if" expression block ("else" (if | block))?
while          -> "while" expression block

assignment     -> Identifier "=" expression
expression     -> comparison
comparison     -> addition ( ( "!=" | "==" | ">" | ">=" | "<" | "<=" ) addition )?
addition       -> multiplication ( ( "-" | "+" ) multiplication )*
multiplication -> unary ( ( "/" | "*" ) unary )*
unary          -> ( "!" | "-" ) unary | primary
primary        -> Literal | Identifier | "(" expression ")" | call

call           -> expression "(" call_argument_list? ")"
call_argument_list -> expression ("," expression)*

function_definition -> "fn" Identifier "(" argument_list_definition? ")" block
argument_list_definition -> Identifier ("," Identifier)*

return         -> "return" expression?
function_unit  -> block | if | while | line | function_definiton | return  // 在__parse_unit实现
function_block -> "{" function_unit* "}"                                   // 在__parse_block实现