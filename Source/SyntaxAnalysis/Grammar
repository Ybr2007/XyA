unit           -> block | if | while | line | function_definiton | class_definition

block          -> "{" unit* "}"
line           -> (assignment | expression) ";"

if             -> "if" expression block ("else" (if | block))?
while          -> "while" expression block

type           -> Identifier
union_type_hint -> type ( "|" type)*
optional_type_hint -> "[" union_type_hint "]"
type_hint      -> union_type_hint | optional_type_hint
type_conversion -> expression "as" type

assignment     -> assignable (":" type_hint)? "=" expression
assignable     -> Identifier | attr

expression     -> comparison
comparison     -> addition ( ( "!=" | "==" | ">" | ">=" | "<" | "<=" ) addition )?
addition       -> multiplication ( ( "-" | "+" ) multiplication )*
multiplication -> unary ( ( "/" | "*" ) unary )*
unary          -> ( "!" | "-" ) unary | primary
primary        -> Literal | Identifier | ( "(" expression ")" ) | call | attr | type_conversion

call           -> expression "(" call_argument_list? ")"
call_argument_list -> expression ("," expression)*

attr           -> expression "." Identifier

function_definition -> "fn" Identifier "(" argument_list_definition? ")" ("->" type_hint)? block
argument_list_definition -> (Identifier (":" type_hint)? ) ("," (Identifier (":" type_hint)? ))*

return         -> "return" expression? ";"
function_unit  -> block | if | while | line | function_definiton | return  // 在__parse_unit实现
function_block -> "{" function_unit* "}"                                   // 在__parse_block实现

method_definition -> VisibilityModifier? function_definition
class_definition -> "class" Identifier "{" (method_definition | configuration_command)* "}"

configuration_command -> "#" Identifier ":" Literal